var isNumeric=function(a){return"undefined"==typeof a?void 0:!Array.isArray(a)&&!isNaN(parseFloat(a))&&isFinite(a)},sumExact=function(a){var b=Math.abs;if(0==a.length)return;if(1==a.length)return a[0];let c=a[0],d=0,e=0;for(let f=1;f<a.length;f++){let g=a[f],h=c+g;if(-1<(g+"").indexOf(".")){let a=(g+"").split(".")[1].length;e=a>e?a:e}d+=b(c)>=b(g)?c-h+g:g-h+c,c=h}let f=Math.pow(10,e+1);return Math.round((c+d)*f)/f};class Vector2D{constructor(a,b){this.x=parseFloat(a)||0,this.y=parseFloat(b)||0}static add(...a){let b=a.reduce((a,b)=>a+b.x,0),c=a.reduce((a,b)=>a+b.y,0);return new Vector2D(b,c)}static addExact(...a){let b=sumExact(a.map(a=>a.x)),c=sumExact(a.map(a=>a.y));return new Vector2D(b,c)}static subtract(a,...b){let c=b.reduce((a,b)=>a-b.x,a.x),d=b.reduce((a,b)=>a-b.y,a.y);return new Vector2D(c,d)}static subtractExact(...a){let b=sumExact(a.map((a,b)=>0===b?a.x:-a.x)),c=sumExact(a.map((a,b)=>0===b?a.y:-a.y));return new Vector2D(b,c)}static mult(a,b){return new Vector2D(a.x*b,a.y*b)}static div(a,b){return new Vector2D(a.x/b,a.y/b)}static length(a){return Math.sqrt(a.x*a.x+a.y*a.y)}static normalise(a){return Vector2D.div(a,Vector2D.length(a))}static setLength(a,b){return Vector2D.mult(Vector2D.normalise(a),b)}static limit(a,b){let c=Vector2D.length(a);return c<=b?a:Vector2D.mult(Vector2D.normalise(a),b)}update(a){this.x=a.x,this.y=a.y}add(...a){a.forEach(a=>this.update(Vector2D.add(this,a)))}addExact(...a){a.forEach(a=>this.update(Vector2D.addExact(this,a)))}subtract(...a){a.forEach(a=>this.update(Vector2D.subtract(this,a)))}subtractExact(...a){a.forEach(a=>this.update(Vector2D.subtractExact(this,a)))}mult(a){this.update(Vector2D.mult(this,a))}div(a){this.update(Vector2D.div(this,a))}length(){return Vector2D.length(this)}normalise(){this.update(Vector2D.normalise(this))}setLength(a){this.update(Vector2D.setLength(this,a))}limit(a){this.update(Vector2D.limit(this,a))}}"undefined"==typeof exports?window.Vector2D=Vector2D:("undefined"!=typeof module&&module.exports&&(exports=module.exports=Vector2D),exports.Vector2D=Vector2D);